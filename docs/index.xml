<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>seanmcloughl.in</title>
    
    
    
    <link>https://seanmcloughl.in/</link>
    <description>Recent content on seanmcloughl.in</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Sean McLoughlin. Built with&amp;nbsp;&lt;a href=&#39;https://seanmcloughl.in/about-blog&#39;&gt;Hugo&lt;/a&gt;.</copyright>
    <lastBuildDate>Sun, 27 Dec 2020 14:45:50 -0800</lastBuildDate>
    
	<atom:link href="https://seanmcloughl.in/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>VLaDOS Dev Blog: Intro (Also Titled: Do More Research Before Committing to a Project Like This)</title>
      <link>https://seanmcloughl.in/posts/vlados-dev-blog-1-intro/</link>
      <pubDate>Sun, 27 Dec 2020 14:45:50 -0800</pubDate>
      
      <guid>https://seanmcloughl.in/posts/vlados-dev-blog-1-intro/</guid>
      <description>
        
          
          
          
        
        
        
          EDIT (12/30/2020) VLaDOS is now defunct and its (empty) repository was removed. It had a very short life after I learned about already-existing tools to do meet its goals, such as LLHD (and, to an extent, Verilator). It makes far more sense to contribute to this project than to start something from scratch. I researched tools like this earlier this year and couldn&amp;rsquo;t find anything, but I guess LLHD released their paper earlier this year and I missed it.
          
        
        </description>
    </item>
    
    <item>
      <title>Easter Eggs Are Never Okay</title>
      <link>https://seanmcloughl.in/posts/easter-eggs-are-never-okay/</link>
      <pubDate>Tue, 22 Dec 2020 12:07:17 -0800</pubDate>
      
      <guid>https://seanmcloughl.in/posts/easter-eggs-are-never-okay/</guid>
      <description>
        
          
          
          
        
        
        
          The Parable You&amp;rsquo;re writing a class to connect to your company&amp;rsquo;s application. You and your colleagues all agree that the feature this class is for is the coolest thing you&amp;rsquo;ve ever heard of &amp;ndash; it&amp;rsquo;s the &amp;ldquo;bees knees,&amp;rdquo; one of your colleagues keeps jesting.
Next thing you know, the driver of you mobbing session renames the class to the_bees_knees. Everyone giggles and moves on to working on other parts of the code base.
          
        
        </description>
    </item>
    
    <item>
      <title>How to Call Rust Code from SystemVerilog</title>
      <link>https://seanmcloughl.in/posts/how-to-call-rust-from-systemverilog/</link>
      <pubDate>Fri, 06 Nov 2020 21:31:31 -0700</pubDate>
      
      <guid>https://seanmcloughl.in/posts/how-to-call-rust-from-systemverilog/</guid>
      <description>
        
          
          
          
        
        
        
          The SystemVerilog Direct Programming Interface (DPI), at a high level, provides remote procedure calls in SystemVerilog. The entirety of the DPI&amp;rsquo;s definition can be read in the SystemVerilog IEEE standard (requires an account to access). Since SystemVerilog is quite a limiting language compared to general-purpose programming languages, being able to do remote procedure calls is an insanely powerful feature. However, it is commonly misunderstood that the DPI only allows users to call C functions.
          
        
        </description>
    </item>
    
    <item>
      <title>&#34;Modern&#34; Hardware Design</title>
      <link>https://seanmcloughl.in/posts/modern-hardware-design/</link>
      <pubDate>Mon, 14 Sep 2020 15:49:26 -0800</pubDate>
      
      <guid>https://seanmcloughl.in/posts/modern-hardware-design/</guid>
      <description>
        
          
          
          
        
        
        
          While software development tools are better than ever, hardware development tools are still stuck in the 90â€™s. How can this be fixed? I am a pre-silicon validation engineer. What that means is that I write software to test, analyze, and stress hardware designs to ensure that they adhere to their architectural specifications. Aside from a Linux environment, The common tools that I use for my job are:
 SystemVerilog: An IEEE-standard language designed for defining hardware at the Register Transfer Level (RTL), as well as the test benches to test that hardware.
          
        
        </description>
    </item>
    
    <item>
      <title>About</title>
      <link>https://seanmcloughl.in/about/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://seanmcloughl.in/about/</guid>
      <description>
        
          
          
          
        
        
        
          Introduction My name is Sean McLoughlin.
I am a design verification engineer at Ampere Computing in Portland, OR. Previously I worked at Intel, where I worked on Intel&amp;rsquo;s 11th-gen SOCs and designed several software tools to aid in DV efficiency.
I have experience with Synopsys and Cadence EDA tools to assist with DV, such as VCS and Verdi, as well as extensive experience writing testbenches with UVM in SystemVerilog.
I also have extensive experience writing C++, Python, and Rust software, both in industry and as open-source software.
          
        
        </description>
    </item>
    
    <item>
      <title>About Blog</title>
      <link>https://seanmcloughl.in/about-blog/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://seanmcloughl.in/about-blog/</guid>
      <description>
        
          
          
          
        
        
        
          This site is built with Hugo.
The theme is hello-friend.
It is hosted with GitHub Pages.
Comments are hosted with GitHub issues via Utterances. This is how I set it up with Hugo.
          
        
        </description>
    </item>
    
    <item>
      <title>Future</title>
      <link>https://seanmcloughl.in/future/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://seanmcloughl.in/future/</guid>
      <description>
        
          
          
          
        
        
        
          Mind Dump This is just a mind dump of projects I plan to work on in the future. DM me on Twitter if you&amp;rsquo;re interested in working with me, or feel free to take these ideas for your own projects.
[ ] A terminal user interface waveform viewer. Inspired by tui-rs.
[ ] A GUI waveform viewer to complement the above.
[X] EDIT: Check out LLHD! A free and open-source SystemVerilog compiler.
          
        
        </description>
    </item>
    
    <item>
      <title>Present</title>
      <link>https://seanmcloughl.in/present/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://seanmcloughl.in/present/</guid>
      <description>
        
          
          
          
        
        
        
          Industry I currently work as a design verification engineer at Ampere Computing. Previously, I worked at Intel, also as a design verification engineer. Due to my non-disclosure agreements, I can&amp;rsquo;t mention what exactly I work/have worked on. You can see my skill set here.
Open Source In order of highest to lowest priority, this is what I&amp;rsquo;m working on currently:
vcd_rust A value change dump parser for Rust. The goal for this project is to create a parser for the VCD file type to be used in other projects.
          
        
        </description>
    </item>
    
  </channel>
</rss>